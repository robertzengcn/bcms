<?php

class WorkerController extends Controller {

    private $service;

    /**
     * 构造函数 初始化service
     */
    function __construct() {
        $this->service = new WorkerService();
    }

    /**
     * 过滤(non-PHPdoc)
     *
     * @see Controller::filter()
     */
    function filter() {
        $filterService = new FilterService();
        $filterService->addFunc($filterService::$SQLINJECTION);
        $filterService->addFunc($filterService::$WORKERISLOGIN);
        $filterService->addFunc($filterService::$WORKERLOGHISTORY);

        return $filterService->execute();
    }

    /**
     * 删除数据
     */
    public function del() {
        // 是否单笔删除还是批量删除
        if (is_array($_REQUEST['id'])) {
            $workers = $_REQUEST['id'];
        } else {
            $workers = array(
                $_REQUEST['id']
            );
        }
        $result = $this->service->deleteBatch($workers);

        echo json_encode($result);
    }

    /**
     * 获得查询的grid数据
     */
    public function query() {
        $result = $this->service->query($_REQUEST);
        $totalRows = $this->service->totalRows($_REQUEST);

        echo json_encode(array(
            'rows' => $result->data,
            'ttl' => $totalRows->data
        ));
    }

    /**
     * 获得单笔
     */
    public function get() {
        $this->blindParams($worker = new Worker());
        $result = $this->service->get($worker);

        echo json_encode($result);
    }

    /**
     * 编辑
     */
    public function edit() {
        $this->blindParams($worker = new Worker());
        $result = $this->service->update($worker);

        echo json_encode($result);
    }

    /**
     * 添加
     */
    public function add() {
    	
        $this->blindParams($worker = new Worker());
        $result = $this->service->save($worker);
        if(isset($_REQUEST['im'])&&$_REQUEST['im']==1){
        	$boyiser=new BoyiManagerService();
        	$boyiser->addusertoboyi($_REQUEST['name']);
        	
        }

        echo json_encode($result);
    }

    /**
     * reg
     */
    public function reg() {
        $this->blindParams($worker = new Worker());

        $result = $this->service->reg($worker);
        $workers = array();
        if ($result->data) {
            $workers['code'] = true;
        } else {
            $workers['code'] = false;
        }

        echo json_encode($workers);
    }

    /**
     * 员工修改密码
     */
    public function mdf() {
        $result = $this->service->mdfPwd();

        echo json_encode($result->data);
    }

    /**
     * 管理员修改密码
     */
    public function mdfAdmin() {
        $result = $this->service->mdfAdmin();

        echo json_encode($result->data);
    }
}


<?php
include './HM.php';
class Ask extends HM {
	
	public function __construct(){
		parent::__construct();
	}
	/**
	 * 
	 * 获取问题列表
	 * */
	protected function __getList(){
		if( isset( $_REQUEST['page'] ) && isset( $_REQUEST['row'] )  ){
			#.获取参数
			$page = (int)$_REQUEST['page'];
			$row  = (int)$_REQUEST['row'];
			$row  = $row <= 0 ? 1 : $row;
			#.获取ask条数
			new AskService();
			$result = R::find(TABLENAME_ASK);
			$count  = count( $result );
			if( $count <= 0 ){
				die( json_encode( array('code'=>0,'msg'=>'success','queslist'=>array()) , true ) );exit;
			}
			if( $page <= 0 ){$page=1;}
			#.计算最大页
			$maxPage = ceil( $count / $row );
			if( $page > $maxPage ){
				die( json_encode( array('code'=>0,'msg'=>'success','queslist'=>array()) , true ) );exit;
			}
			#.limit
			$limit   = ( $page - 1 ) * $row . ',' . $row;
			$result = R::find('ask','ORDER BY id desc limit '.$limit);
			#.遍历获得hm像要的数据
			$data = array();
			foreach ( $result as $key => $value ) {
				$data[$key-1]['title'] = $value->subject;
				$data[$key-1]['time']  = date('Y-m-d H:i:s',$value->plushtime);
				$data[$key-1]['question_id'] = $value->id;
				#.查询本问题是否来自总控
				$inter_ask = R::find('interface_ask','ask_id='.$value->id);
				$data[$key-1]['is_hma'] = count($inter_ask) >= 1 ? '1' : '0';
			}
			#.输出
			$ddata = array();
			foreach ($data as $k => $v){
				$ddata[] = $v;
			}
			die( json_encode( array('code'=>0,'msg'=>'success','queslist'=>$ddata) , true ) );exit;
		}else{
			$this->__msg(1,'缺少page或row参数.',null);
		}
	}
	
	protected function __getInfo(){
		if( isset( $_REQUEST['question_id'] ) && (int)$_REQUEST['question_id'] >= 1 ){
			$id = (int)$_REQUEST['question_id'];
			new AskService();
			$result = R::findOne(TABLENAME_ASK,'where `id`=\''.$id.'\'');
			if( count( $result ) <= 0 ){
				$this->__msg(1,'不存在对应的问题信息.',null);
			}else{
				$data = array();
				$data['code'] 		   = 0;
				$data['msg']  		   = 'success';
				$data['id']			   = $id;
				$data['case_questime'] = date('Y-m-d H:i:s',$result->plushtime);
				$data['title']    	   = $result->subject;
				$data['username']      = $result->name;
				$descInfo = R::findOne(TABLENAME_ASKDESC,'where `ask_id`=\''.$id.'\'');
				$data['age']		   = $descInfo->age;
				$data['image_url']     = isset($descInfo->pic1)&&$descInfo->pic1?$descInfo->pic1:"";
				$data['describe']      = $descInfo->description;
				$data['gender']        = $descInfo->gender == 0 ? '女' : '男';
				die( json_encode( $data ) );
			}
		}else{
			$this->__msg(1,'缺少question_id或参数不正确.',null);
		}
	}
	/**
	 * 回答问题
	 * */
	protected function __answer(){
		require_once '../hwibsc/answer.php';
		if( isset( $_REQUEST['question_id'] ) ){
			$id      = (int)$_REQUEST['question_id'];
			$content = isset( $_REQUEST['content'] ) ? $_REQUEST['content'] : '';
			new AskService();
			$result = R::findOne(TABLENAME_ASK,'where `id`=\''.$id.'\'');
			#.如果回复内容为空,则取出所有
			if( trim( $content ) == '' ){
				if( $result->isanswer == 1 ){
					$this->__input($id,true);
				}else{
					$this->__input($id,false);
				}
			}
			if( count( $result ) <= 0 ){
				$this->__msg(1,'不存在对应的问题信息.',null);
			}else{
				if( $content == '' ){
					$this->__msg(1,'回复内容不能为空.',null);
				}
				$isAdd = false;
				#.是否已经回复过了
				if( $result->isanswer == 1 ){
					#.取出ansID
					$answer = R::findOne(TABLENAME_ANSWER,'where `ask_id`=\''.$id.'\'');
					#.继续回复
					$askaddto = new AskAddto();
					$askaddtoDao = new AskAddtoDAO();
					$askaddto->mode  = 0;
					$askaddto->askID = $id;
					$askaddto->ansID = $answer->id;
					$askaddto->info  = $content;
					$askaddto->plushtime = time();
					$askaddto->addID = 0;
					$askaddtoDao->save($askaddto);
					$isAdd = true;
					if( isset( $_REQUEST['is_hma'] ) && $_REQUEST['is_hma'] == '1' ){
						new AnswerGet($askaddto,'no_answer');
					}
					
					
				}else{
					#.添加回复
					$answer = new Answer();
					$answerDao = new AnswerDAO();
					$answer->askID   = $id;
					$answer->hosID   = 1;
					$answer->docID   = 1;
					$answer->content = $content;
					$answer->plushtime = time();
					$answer->useful  = 0;
					$answer->useless = 0;
					$answerDao->save( $answer );
					R::exec( "update `ask` set `isanswer`=1 where `id`=$id;" );
					$isAdd = false;
					if( isset( $_REQUEST['is_hma'] ) && $_REQUEST['is_hma'] == '1' ){
						new AnswerGet($answer,'answer');
					}
				}
				$question = R::findOne(TABLENAME_INTERFACE_ASK,'ask_id = :ask_id',array('ask_id'=>$id));
				if($question->question_id){
					$this->askjspush($id,$question->question_id,$answered=1);
				}
				
				#.输出信息
				$this->__input($id,$isAdd);
			}
		}else{
			$this->__msg(1,'缺少question_id或缺少content参数.',null);
		}
	}
	
	private function __input($askID,$isAdd){
		$answer = R::findOne('answer','where `ask_id`=\''.$askID.'\'');#.取出回复信息
		$data   = array();
		$i      = 0;
		if( $isAdd === true ){//追问表有信息
			$data[$i]['is_from'] = false;
			$data[$i]['chat_id'] = 1;
			$data[$i]['content'] = $answer->content;
			$data[$i]['time']    = date('Y-m-d H:i:s',$answer->plushtime);
			$i++;
			$addList = R::findAll('askaddto','where `ask_id`=\''.$askID.'\'');#.取出回复信息
			foreach ($addList as $key => $value){
				$data[$i]['is_from'] = $value->mode == 0 ? false : true;
				$data[$i]['chat_id'] = $key+1;
				$data[$i]['content'] = $value->info;
				$data[$i]['time']    = date('Y-m-d H:i:s',$answer->plushtime);
				$i++;
			}
		}else{//追问表没有信息
			if( is_object( $answer ) ){
				$data[$i]['is_from'] = false;
				$data[$i]['chat_id'] = 1;
				$data[$i]['content'] = $answer->content;
				$data[$i]['time']    = date('Y-m-d H:i:s',$answer->plushtime);
			}else{
				$data = null;
			}
		}
		die( json_encode( array('code'=>0,'msg'=>'success','queslist'=>$data) ) );exit;
	}
	
	private function askjspush($askid,$question_id,$answered=1){
		//判断是否需要推送
		$contactser=new ContactService();
		$jpushstate=$contactser->getContact('jpushstate')->data;
		if($jpushstate){//如果推送开启
			//处理推送			
			$askser=new AskService();
			$ask=new ask();
			$ask->id=$askid;
		
			$resbookdata=$askser->get($ask)->data;
		
			if(!$resbookdata->user_alis){

				return $this->fail(9,'推送失败,用户不存在');//如果用户不存在
			}
		
			$jpushkeydata=$contactser->getContact('jpushkey')->data;
			$jpushsecdata=$contactser->getContact('jpushsec')->data;
		
			if($jpushkeydata){
				$jpushkeyval=$jpushkeydata->val;
			}else{
				return $this->fail(2,'推送应用app key为空');
			}
			if($jpushsecdata){
				$jpushsecval=$jpushsecdata->val;
			}else{
				return $this->fail(3,'推送应用app sec为空');
			}
			
			if($answered==1){
				$type='reply_add';
			}else{
				$type='reply_ask';
			}
				
			try{
				$jpushser=new JpushService($jpushkeyval,$jpushsecval);
				$jpushser->setPlatform(array('ios', 'android'));
				$jpushser->addAlias($resbookdata->user_alis);
				//$jpushser->addAlias('341');
				$jpushser->setNotificationAlert('医院已确认您到诊');
				$jpushser->iosNotification('医院已确认您到诊', array(
						'sound' => 'sound.caf',
						// 'badge' => '+1',
						// 'content-available' => true,
						// 'mutable-content' => true,
						'category' => 'jiguang',
						'extras' => array(
								'question_id' => $question_id,
								'type'=>$type
						),
				));
				$jpushser->androidNotification('医院已确认您到诊', array(
						'title' => '医院已确认您到诊!',
						// 'build_id' => 2,
						'extras' => array(
								'question_id' => $question_id,
								'type'=>$type
						),
				));
		
				// 			$jpushser->message('医院已确认您到诊', array(
				// 					'title' => '医院已确认您到诊',
				// 					// 'content_type' => 'text',
				// 					'extras' => array(
				// 							'type' => 'resmake',
					
				// 					),
				// 			));
		
				$jpushser->send();
				$error_log=GENERATEPATH . 'log/jpush_error.log';
				error_log(date('Y-m-d H:i:s') . ' JPUSH success ' .$fullmember->user_alis. PHP_EOL, 3, $error_log);
			}catch(Exception $e){
				$error_log=GENERATEPATH . 'log/jpush_error.log';
				error_log(date('Y-m-d H:i:s') . ' JPUSH error:' . $e->getMessage() . PHP_EOL, 3, $error_log);
				//error_log($message);
			}
		
		}
	}
	
}
new Ask();
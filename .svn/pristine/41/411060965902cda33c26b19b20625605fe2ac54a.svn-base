<?php

/**
 * 医生(Doctors)DAO
 *
 * @author Administrator
 *
 */
class DoctorManagerDAO extends DBBaseDAO {

    public function __construct() {
        parent::__construct();
        $this->tableName = TABLENAME_DOCTORMANAGER;
        $this->doctorToDisease = TABLENAME_DOCTORTODISEASE;
        $this->doctor = TABLENAME_DOCTOR;
    }

    /**
     * 获得grid数据
     *
     * @param array $where
     *            查询条件
     *            return object $arr
     */
    public function query($where) {   
        DTExpression::like('name', $where, $this->tableName);
        DTExpression::eq('department_id', $where, $this->tableName);
        DTExpression::page($where);
        DTOrder::asc($this->tableName . '.id');

        $sql = ORMMap::$sqlMap['doctormanager_relation'] . ' where ' . DTEXPRESSION::$sql . DTOrder::$sql . DTExpression::$limit;
 
        $array = $this->getJoin($sql);
       

        return $array;
    }
    
    /*
     * get doctor id by name
     * 
     * */
    public function get_name($arr){
       $result = R::findOne($this->tableName, 'name = ?',$arr);
       return $result;
    	
    }
    
    /*
     * 获取除该科室外的其它科室医生
    * */
    public function get_otherdoctor($arr){
    	$result = R::findAll($this->tableName, 'doctor_id != ?', $arr);
    	print_r($result);
    
    }
    
    
    /**
     * 保存医生数据
     *
     * @see DBBaseDAO::save()
     */
    public function doctorSave($doctor, $departmentsbean) {
    	$this->remPic( 'save' , $doctor , null );
        $doctorBean = R::dispense($this->tableName);
        $doctor->generateRedBean($doctorBean);
        if($departmentsbean->id!=0||$departmentsbean->id!=null){       
        $departmentsbean->ownDoctors[] = $doctorBean;
        R::store($departmentsbean);
        }
        $doctor->generateFromRedBean($doctorBean);

        return true;
    }

    /**
     * 保存医生疾病关系
     *
     * @param string $doctor_id
     * @param string $disease_id
     */
    public function addDisease($doctor_id, $disease_id) {
        $sql = 'insert into doctortodisease(doctor_id,disease_id) values(' . $doctor_id . ',' . $disease_id . ')';
        R::exec($sql);
        return true;
    }

    /**
     * 获得总数
     *
     * @param array $where
     *            查询条件
     *            return object $arr
     */
    public function totalRows($where) {
        DTExpression::like('name', $where);
        DTExpression::eq('department_id', $where);

        return $this->getRecordCount(DTExpression::$sql, DTExpression::$params);
    }

    /**
     * 根据医生获取疾病
     *
     * @param string $para
     *            return array $arr
     */
    public function getDisease($para) {
        $diseases = R::findAll($this->doctorToDisease, 'doctor_id = ?', array(
            $para
        ));

        $diseaseArray = array();
        foreach ($diseases as $key => $value) {
            $doctorToDisease = new DoctorToDisease();
            $doctorToDisease->generateFromRedBean($value);
            $diseaseArray[] = $doctorToDisease;
        }

        return $diseaseArray;
    }

    /**
     * 更新医生数据
     *
     * @param entity $doctor
     * @param array $disease_id
     *            return boolean
     */
    public function updateDisease($doctor, $diseaseId) {
        // 医生疾病表数据的修改
        $bean = R::findAll($this->doctorToDisease, 'doctor_id = ?', array(
            $doctor->id
        ));
        $this->deleteBeans($bean);
        foreach ($diseaseId as $value) {
            $doctorToDisease = new DoctorToDisease();
            $doctorToDisease->doctor_id = $doctor->id;
            $doctorToDisease->disease_id = $value;

            $bean = R::dispense($this->doctorToDisease);
            $doctorToDisease->generateRedBean($bean);
            R::store($bean);
        }

        return true;
    }

    /**
     * 删除医生疾病关系表数据
     *
     * @param int $doctor_id
     */
    public function deleteDisease($doctor_id) {
        $doctorToDisease = R::findAll($this->doctorToDisease, 'doctor_id = ?', array(
            $doctor_id
        ));

        $this->deleteBeans($doctorToDisease);

        return true;
    }

    /**
     * 获取医生数据
     *
     * @return multitype:Doctors
     */
    public function getDoctors() {
        $doctors = R::findAll($this->tableName);

        $doctorArray = array();
        foreach ($doctors as $key => $value) {
            $doctor = new Doctor();
            $doctor->generateFromRedBean($value);
            $doctorArray[] = $doctor;
        }

        return $doctorArray;
    }

    /**
     * 获取单条数据
     *
     * @param unknown $id
     */
    public function getDoctorById($id) {
        $doctor = new Doctor();
        $doctorBean = R::load($this->tableName, $id);
        $doctor->generateFromRedBean($doctorBean);

        return $doctor->name;
    }

    /**
     * 获取医生
     *
     * @param unknown $departments_id
     * @return Ambigous <array(Entity), multitype:unknown >
     */
    public function getByDepartmentID($department_id) {
        $doctors = R::findAll($this->tableName, 'department_id = ?', array(
            $department_id
        ));

        $doctorArray = array();
        foreach ($doctors as $key => $value) {
            $doctor = new Doctor();
            $doctor->generateFromRedBean($value);
            $doctorArray[] = $doctor;
        }

        return $doctorArray;
    }
    
    /**
     * 更新医生所在的部门
     * @param int $doctor
     * @param int $departments_id
     * @return Ambigous <array(Entity), multitype:unknown >
     */
    public function update_department($doctor,$departments_id){


   	
    	$doctormanagerdate = R::load($this->tableName, (int)$doctor);

    	$doctormanagerdate->department_id = (int)$departments_id;
    	R::store($doctormanagerdate);
    	    	
    	
    }
    

    /**
     * 根据疾病ID获取医生
     *
     * @param string $disease_id
     */
    public function getByDiseaseId($disease_id) {
        $beans = R::findAll($this->doctorToDisease, " disease_id = '" . $disease_id . "' ");
        $ids = array();
        foreach ($beans as $key => $value) {
            $doctorToDisease = new DoctorToDisease();
            $doctorToDisease->generateFromRedBean($value);
            $ids[] = $doctorToDisease->doctor_id;
        }

        $beans = R::batch($this->tableName, $ids);
        $doctorArray = array();
        foreach ($beans as $key => $value) {
            $doctor = new Doctor();
            $doctor->generateFromRedBean($value);
            if ($doctor->id == 0) {
                continue;
            }
            $doctorArray[] = $doctor;
        }

        return $doctorArray;
    }
    
    /**
     * 根据科室id取医生的数量
     *
     * @param string $depart_id
     */
    
    
    public function countByDepartment($depart_id){
    	

    	return $countdoctor=R::count($this->tableName," department_id = '" . $depart_id . "' ");
    	
    	
    	
    }
    
    /*
     * 导入医生数据到预约医生数据表里
     * 
     * */
    
    public function importdate(){
    	$sql = 'INSERT INTO '.$this->tableName.' ( name, pic, birthday, gender, content, certificate, specialty, cultural, university, department_id, plushtime ) SELECT name,pic, birthday, gender, content, certificate, specialty, cultural, university, department_id, plushtime FROM `'.$this->doctor.'` ';

    	
    	R::exec($sql);
    	return true;
    }
}

<?php

class MemberLogService extends BaseService {

    /**
     * 构造函数
     */
    public function __construct() {
        $this->dao = new MemberLogDAO();
    }

    /**
     * 批量删除
     *
     * @param array $arr(id,...)
     * @return boolean
     */
     public function deleteBatch($ids) {
        Entity::isIds($ids);   // 验证ids是否合法
        $scoreruleArray = $this->dao->getBatch($ids);

        return $this->dao->deleteBeans($scoreruleArray);
    } 

    /**
     * 获取一条数据
     *
     * @param Entity $scorerule
     * @return Result
     */
    public function get($scorerule) {
        $this->dao->get($scorerule->id, $scorerule);
 
        return $this->success($scorerule);
    }


    /**
     * 获得grid数据
     *
     * @param array $where
     *            查询条件
     * @return Result
     */
    public function query($where) {
        $scoreruleArray = $this->dao->query($where);
        
        foreach($scoreruleArray as $key=>$val){
        	$scoreruleArray[$key]->last_log=date('Y-m-d H:i',$val->last_log);
        	
        }
       

        return $this->success($scoreruleArray);
    }
    
 

    /**
     * 保存数据
     *
     * @param Entity $scorerule
     * @return Result
     */
    public function save($member) {
    	
         $member->validate();        
        // 获取class对象并插入数据
        $this->dao->save($member);
      
        return $this->success();
    }
    
    /*
     * 通过接口保存用户登录记录
     * param $arr
     * */
    public function savelog($arr){
    	$member=new MemberLog();
    	$member->uid=$arr['uid'];
    	$member->last_log=$arr['last_log'];
    	$member->type=$arr['type'];
    	$member->score=$arr['score'];
    	$this->dao->save($member);
    	return $this->success();
    }
    
    /*
     * 计算今日会员登录次数
     * */
    public function counttodaylog($arr){
    	
    	$t = time();
    	$start = mktime(0,0,0,date("m",$t),date("d",$t),date("Y",$t));
    	$end = mktime(23,59,59,date("m",$t),date("d",$t),date("Y",$t));
    	$arr=array('uid'=>$arr['uid'],'start'=>$start,'end'=>$end);
        $result=$this->dao->counttodaylog($arr);
        return $this->success($result);    	    	
    }
    /*
     * 计算用户登录次数
     * array('uid'=>uid)
     * */
    public function countmember($arr){
    	
    	$result=$this->dao->countmember($arr);
    	return $this->success($result);
    }
    
    /*
     * 计算用户昨日是否登录
     * 
     * */
    public function countyestdaylog($arr){
    	$t=time()-86400;
    	$start = mktime(0,0,0,date("m",$t),date("d",$t),date("Y",$t));
    	$end = mktime(23,59,59,date("m",$t),date("d",$t),date("Y",$t));
    	$arr=array('uid'=>$arr['uid'],'start'=>$start,'end'=>$end);
    	$result=$this->dao->counttodaylog($arr);
    	return $this->success($result);
    }
    
    /*
     * 计算用户今日获得的积分数
     * 
     * */
    public function summember($arr){
    	$t = time();
    	$start = mktime(0,0,0,date("m",$t),date("d",$t),date("Y",$t));
    	$end = mktime(23,59,59,date("m",$t),date("d",$t),date("Y",$t));
    	$arrs=array('uid'=>$arr['uid'],'start'=>$start,'end'=>$end,'type'=>$arr['type']);
    	$result=$this->dao->summember($arrs);
    	return $this->success($result[0]);
    }
     /*
     * 完善个人资料
     * 
     * */   
     public function perfectmember($arr){
    	
    	$result=$this->dao->perfectmember($arr);
    	return $this->success($result);
    }
    
}


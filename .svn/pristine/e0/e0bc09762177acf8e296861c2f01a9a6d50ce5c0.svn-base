<?php

class ClientController extends Controller {

    private $service;

    /**
     * 构造函数 初始化service
     */
    function __construct() {
        parent::__construct();
        $this->service = new ClientService();
    }

    /**
     * 过滤(non-PHPdoc)
     *
     * @see Controller::filter()
     */
    function filter() {
        $filterService = new FilterService();
        $filterService->addFunc($filterService::$SQLINJECTION);
        $filterService->addFunc($filterService::$WORKERISLOGIN);
        $filterService->addFunc($filterService::$WORKERLOGHISTORY);

        return $filterService->execute();
    }
    
    /**
     * 列表查询
     * */
    public function query() {
        $result = $this->service->query($_REQUEST);
        $ttl = $this->service->totalRows($_REQUEST);
        echo json_encode(array(
            'rows' => $result->data,
            'ttl' => $ttl
        ));
    }

    /**
     * 根据client_id查找
     */
    public function getRecord() {
        $result = $this->service->getRecord($client_id);

        echo json_encode(array(
            'rows' => $result->data,
            'ttl' => ''
        ));
    }

    /**
     * 删除
     */
    public function del() {
        $result = $this->service->deleteClient($_REQUEST['id']);

        echo json_encode($result);
    }

    /**
     * 添加
     */
    public function save() {
        $this->blindParams($client = new Client());
        if (isset($_REQUEST['focus_id']) && !empty($_REQUEST['focus_id'])) {
        	$client->focus_id = implode(',', $_REQUEST['focus_id']);
        }
        
        $this->blindParams($clientRecord = new ClientRecord());
        $result = $this->service->save($client,$clientRecord);

        //如果是一定到诊，则将其分配到预约挂号表中去
        if ($result->statu == true && $client->is_used == '0') {
        
            $res = $this->reserUser();
            if ($res->statu == true) {
            	//预约添加成功后给关注人发送短信
            	$this->service->sendMsg($client->focus_id);
            } else {
            	echo json_encode($res);
            }
        }
        echo json_encode($result);
    }
    
    /**
     * 修改
     */
    public function update() {
        $contents = isset($_REQUEST['content']) ? $_REQUEST['content'] : '';
        $record_ids = isset($_REQUEST['record_ids']) ? $_REQUEST['record_ids'] : '';
        $record_ids = array_filter(explode(',', $record_ids));
        $this->blindParams($client = new Client());
        if (isset($_REQUEST['focus_id']) && !empty($_REQUEST['focus_id'])) {
        	$client->focus_id = implode(',', $_REQUEST['focus_id']);
        }
        
        $clientRecords = array();
        foreach ($contents as $key=>$content) {
            $clientRecord = new ClientRecord();
            if (in_array($key, $record_ids)) {
                $clientRecord->id = $key;
            }
            
            $clientRecord->content = $content;
            $clientRecords[] = $clientRecord;
        }
        
        $result = $this->service->update($client,$clientRecords);
    
        //如果是一定到诊，则将其分配到预约挂号表中去
        if ($result->statu == true && $client->is_used == '0') {
        
        	$res = $this->reserUser();
        	if ($res->statu == true) {
        		//预约添加成功后给关注人发送短信
        		$this->service->sendMsg($client->focus_id);
        	} else {
        		echo json_encode($res);
        	}
        }
        echo json_encode($result);
    }
    
    /**
     * 将预约者添加到预约表中去,修改未约成已约
     */
    public function reserUser() {
    
    	$reservation = new Reservation();
    	$reservation->id=$_REQUEST['time'];
    	 
    
    	$reserservice = new ReservationService();//here
    	$ress=$reserservice->get($reservation);
    	$num=$ress->data->along-$ress->data->mark;
    	if($_REQUEST['restime']==null){
    		return new Result(false, 132, '诊断时间不正确', '');
    	}
    	$arr = explode('-',$_REQUEST['restime']);
    	if (! $reservation->isHours($arr[0])) {
    		return new Result(false, 132, '时间格式不正确', '');
    	}
    
    
    	if($num>0){
    
    		$reservationdetailservice=new ReservationDetailService();
    		$reservationDetail = new ReservationDetail();
    		$reservationDetail->doctor_id=$ress->data->doctor_id;
    		$reservationDetail->department_id=$ress->data->department_id;
    		$reservationDetail->date=strtotime($ress->data->date);
    			
    		$reservationDetail->times=strtotime($ress->data->date.' '.$arr[0]);
    		$reservationDetail->username=$_REQUEST['username'];
    		$reservationDetail->telephone=$_REQUEST['telphone'];
    		$reservationDetail->card='';
    		$reservationDetail->statu='已约';
    
    		$resv=$reservationdetailservice->save($reservationDetail);
    
    		 
    		if($resv->statu){
    			$reserservice->addresnum($reservation);
    			$address = str_replace('>', '', $_REQUEST['place']);
    			$reserservice->insertuser($_REQUEST['username'],$_REQUEST['gender'],$_REQUEST['age'],$_REQUEST['date'],$reservationDetail->times,$address,$_REQUEST['telphone'],$_REQUEST['email'],$_REQUEST['mark'],0,$resv->data->id);
    		}
    		
    		return new Result(true, 0, '', '');
    
    	}else{
    		return new Result(false, 170, '\u5df2\u6ca1\u6709\u5269\u4f59\u53f7\u6570\u53ef\u9884\u7ea6', '');
    	}
    	return new Result(true, 0, '', '');
    }
    

    /**
     * 编辑
     */
    public function get() {
        $result = $this->service->get($_REQUEST['id']);

        echo json_encode($result);
    }
    
    /**
     * 保存关注组信息
     * */
    public function saveGroup() {
        $this->blindParams($group = new ClientGroup());
        $group->remark = '';
        $result = $this->service->saveGroup($group);
        
        echo json_encode($result);
    }
    
    /**
     * 获取所有组
     * */
    public function getGroups() {
        $data = $this->service->getGroups();
        echo json_encode(new Result(true, 0, '', $data));
    }
    
    /**
     * 获取指定组下用户
     * */
    public function getGroupUsers() {
        $groupid = isset($_REQUEST['group_id']) ? $_REQUEST['group_id'] : 'all';
        $data = $this->service->getGroupUsers($groupid);
        echo json_encode(new Result(true, 0, '', $data));
    }

    /**
     * 保存客户地址信息
     */
    public function savePlace() {
        $places = array();
        
        //数据整理
        $data = isset($_REQUEST['data']) ? $_REQUEST['data'] : '';
        if ( $data ) {
        	foreach ($data as $key=>$value) {
        		$index = explode('TD-', $key);
        		$places[$index[1]] = $value;
        	}
        }
        
        $filename = ABSPATH . '/hcc/clients/manage/place.json';
        file_put_contents($filename, json_encode($places));
        echo json_encode (new Result(true, '', '', ''));
    }
    
    /**
     * 删除客户地址信息
     */
    public function delPlace() {
        $filename = ABSPATH . '/hcc/clients/manage/place.json';
        $data = json_decode(file_get_contents($filename),true);
        
        $id = isset($_REQUEST['id']) ? $_REQUEST['id'] : '';
        if ( $data ) {
            foreach ($data as $key=>$value) {
                if (strlen($key)>=strlen($id)){
                    $prefix = substr($key, 0, strlen($id));
                    if ($id == $key || $id == $prefix) {
                        //删除本身及子级
                        unset($data[$key]);
                    }
                }
                
            }
            $filename = ABSPATH . '/hcc/clients/manage/place.json';
            file_put_contents($filename, json_encode($data));
        }
    
        echo json_encode (new Result(true, '', '', ''));
    }
    
    /**
     * 获取客户地址信息
     */
    public function getPlace() {
        $filename = ABSPATH . '/hcc/clients/manage/place.json';
        $data = json_decode(file_get_contents($filename),true);
    
        $first = $second = $third = array();
        if ( $data ) {
            foreach ($data as $key=>$value) {
                $arr = explode('-', $key);
                if (count($arr) == 1) {
                	$first[$key] = $value; 
                }
                
                if (count($arr) == 2) {
                    $second[$key] = $value; 
                }
                
                if (count($arr) == 3) {
                    $third[$key] = $value; 
                }
            }
        }
    
        echo json_encode (new Result(true, '', '', array('first'=>$first, 'second'=>$second,'third'=>$third)));
    }
    
    /**
     * 获取来源信息
     * */
    public function getDataSource() {
        $data = $this->service->getDataSource();
        if (isset($_REQUEST['list']) && $_REQUEST['list']) {
            $result = array('rows'=>$data,'ttl'=>count($data));
        } else {
            $result = new Result(true, 0, '', $data);
        }
        echo json_encode($result);
    }
    
    /**
     * 添加来源信息
     * */
    public function addSource() {
        echo json_encode($this->service->saveDataSource());
    }
    
    /**
     * 删除来源信息
     * */
    public function delSource() {
        $id = isset($_REQUEST['id']) ? $_REQUEST['id'] : '';
        echo json_encode($this->service->delDataSource($id));
    }
    
    /**
     * 修改来源信息
     * */
    public function modSource() {
        $id = isset($_REQUEST['id']) ? $_REQUEST['id'] : '';
        echo json_encode($this->service->modSource($id));
    }
    
    /**
     * 获取接待信息
     * */
    public function getReceptionist() {
        $data = $this->service->getReceptionist();
        if (isset($_REQUEST['isPage'])) {
            $ttl = $this->service->getReceptionistCount();
            $result = array('rows'=>$data,'ttl'=>$ttl);
        } else {
            $result = new Result(true, 0, '', $data);
        }
        echo json_encode($result);
    }
    
    /**
     * 添加前台接待信息
     * */
    public function addReceptionist() {
        echo json_encode($this->service->addReceptionist());
    }
    
    /**
     * 修改前台接待信息
     * */
    public function modReceptionist() {
        echo json_encode($this->service->modReceptionist());
    }
    
    /**
     * 删除前台接待信息
     * */
    public function delReceptionist() {
        $id = isset($_REQUEST['id']) ? $_REQUEST['id'] : '';
        echo json_encode($this->service->delReceptionist($id));
    }
    
    /**
     * 获取统计数据
     * */
    public function getStatData() {
        $rows = $this->service->getStatData();
        $ttl = isset($rows['ttl']) ? $rows['ttl'] : count($rows);
        $rows = isset($rows['rows']) ? $rows['rows'] : $rows;
        echo json_encode(array('rows'=>$rows,'ttl'=>$ttl));
    }
    
    /**
     * 获取当月就诊数据
     * */
    public function statByDate() {
        $data = $this->service->statByDate();
        echo json_encode(array('statu'=>true,'data'=>$data));
    }
}

?>

<?php
//载入入口文件
include_once 'init.php';

/**
 * 
 * 医院动态
 * @author Administrator
 *
 */
class orderShop extends Shop {
	
	/**
	 * 
	 * 构造方法,通过method方法,调取对应的输出函数
	 * @param unknown_type $method
	 */
	public function __construct() {
		parent::__construct();
		$this->excute();
	}
	
	/**
	 * 
	 * 医院新闻动态列表
	 */
	public function query() {
		
		
 		$param=array('member_id'=>$_SESSION['member_id']);
// 		echo $_SESSION['member_id'];
// 		exit();
	
		$list = $this->getServiceMethod('order','query',$param);

		
		//$categories_id=isset($_REQUEST['categories_id'])?(int)$_REQUEST['categories_id']:"";
		$this->smarty->assign('list',$list->data);
		
// 		$this->pageSetting( 10 ,'commodity','commodity');//分页式列表		
// 		$seo = $this->getServiceMethod('Seo','query',array("flag" => "news"));
// 		$this->smarty->assign('seo',$seo->data[0]);
		$this->smarty->display( 'Order/list' . TPLSUFFIX );
	}
	
	/*
	 * 订单结算控制器
	 * */
	
	public function checkout(){
		//$cartser=new CartService();
		
		$data=json_decode(stripslashes($_REQUEST['cart_id']));
		

		if(!empty($data)){
			$msgflag=false;
			$msg='';
			$cnum=0;
			$score=0;
			$pricetotal=0;
			foreach ($data as $k=>$v){
				$num=$this->getServiceMethod('cart','count_score',array('member_id'=>$_SESSION['member_id'],'id'=>$v));
				$price=$this->getServiceMethod('cart','count_price',array('member_id'=>$_SESSION['member_id'],'id'=>$v));				
				$score=$score+$num->data;
				$pricetotal=$pricetotal+$price->data;
			}
			

			
			$scoreamount=$this->getServiceMethod('member','getmemberscore',array('id'=>$_SESSION['member_id']));
			
		
			if($score>$scoreamount->data->ownscore){
				echo json_encode(array('statu'=>false, 'code'=>182,msg=>'用户积分不足',data=>null));
				exit();
			}
			
			
			$order=$this->getServiceMethod('order','addorder',array('member_id'=>$_SESSION['member_id'],'total_score'=>$score,'total_price'=>$pricetotal));
			$orderid=$order->data->id;
				//$this->dao->beginTrans();
				
			foreach ($data as $key=>$val){
				
				$cart = $this->getServiceMethod('cart','getmebercart',array('member_id'=>$_SESSION['member_id'],'id'=>$val));
				
				$result=$this->getServiceMethod('commodity','getcombyid',array('id'=>$cart->data['commodity_id']));
				
				if(!empty($result->data)){
					
				if($result->data->status){
				if($result->data->quantity>0&&$cart->data->quantity<=$result->quantity){
					
					$orderdetail=$this->getServiceMethod('ordercommodity','addorder',array('member_id'=>$_SESSION['member_id'],'order_id'=>$orderid,'commodity_id'=>$cart->data['commodity_id'],'commodity_name'=>$result->data->subject,'final_price'=>$cart->data['final_price'],'commodity_price'=>$result->data->price,'commodity_quantity'=>$cart->data['quantity'],'final_score'=>$cart->data['final_score'],'commodity_score'=>$result->data->score));
					if($orderdetail->statu){
						
						$this->getServiceMethod('member','reducescore',array('id'=>$_SESSION['member_id'],'score'=>$cart->data['final_score']));
						$this->getServiceMethod('cart','deleteBatch',array('id'=>$val));
						$cnum++;
						
					}
				}
				}else{
					$msgflag=true;
					$msg.=' '.$result->data->subject.'已被下架，无法结算';
				}
				}else{
					$msgflag=true;
					$msg.=' 没有找到  '.$result->data->subject;
				}
			}
			//$this->dao->commitTrans();
			
			if($msgflag){
				echo json_encode(array('statu'=>true, 'code'=>$cnum,'msg'=>$msg,'data'=>null));
				exit();
				
			}else{
				echo json_encode(array('statu'=>true, 'code'=>$cnum,'msg'=>null,'data'=>null));
				exit();
			}
			
				
				//$this->dao->rollbackTrans();
			
		}else{
			echo json_encode(array('statu'=>false, 'code'=>183,'msg'=>'该商品不存在，可能已经被下架','data'=>null));
			exit();
		}
		
	}
	
	/*
	 * 获取单个订单详情
	 * $param $_Request['order_id'];
	 * */
	
	public function getorder(){
		$order_id=(int)$_REQUEST['order_id'];
		$param=array('id'=>$order_id,'member_id'=>$_SESSION['member_id']);
		$detail = $this->getServiceMethod('order','getmemberorder',$param);
		
		$this->smarty->assign('detail',$detail->data);
		
		$this->smarty->display( 'Order/detail' . TPLSUFFIX );
	
		
		
	}

	
}

new orderShop();
?>